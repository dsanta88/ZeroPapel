@inherits LayoutComponentBase
@using ZeroPapel.Shared
@inject HttpClient Http
@using MatBlazor
@inject NavigationManager navigationManager
@using Newtonsoft.Json;
@inject ServicioSingleton singleton
@inject IJSRuntime js



<div class="wrapper">

    <!-- Navbar -->
    <nav class="main-header navbar navbar-expand navbar-white navbar-light">
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
    </ul>
    <ul class="navbar-nav ml-auto">
        <li class="nav-item d-none d-sm-inline-block">
            <!-- Brand Logo -->
 
            <a href="/login" class="nav-link">
                <i class="nav-icon fa fa-power-off"></i>
                <label>Cerrar Sesión</label>
            </a>
        </li>
        </ul>
    </nav>
    <!-- Main Sidebar Container -->
    <aside class="main-sidebar sidebar-dark-success bg-green elevation-4">
        <!-- Brand Logo -->
        <a class="brand-link bg-white " style="text-align:left">
            <img src="@singleton.EmpresaLogo" style="width:120px; height:50px" />
        </a>

        <!-- Sidebar -->
        <div class="sidebar">
            <!-- Sidebar user panel (optional) -->
            <div class="user-panel mt-2 pb-2 mb-2 d-flex">
                @*<div class="info">*@
                <a class="d-block">@singleton.UsuarioNombre</a>
                @*</div>*@
            </div>

            <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
                @*@if (list == null)
                {
                    <p><em>Loading....</em></p>
                }
                else
                {*@
                    <ul class="nav flex-column">
                        @foreach (Menu item in list)
                        {
                            @if (item.PadreId == 0)
                            {
                                <li class="nav-item" px-3>
                                    <NavLink class="nav-link" @onclick="()=>GetIsClicked(item)">
                                        <span class="@item.Icono" aria-hidden="true"></span> @item.Nombre
                                    </NavLink>
                                    <ul class="nav flex-column">
                                        @foreach (Menu men in list)
                                        {
                                            @if (item.Id == men.PadreId)
                                            {
                                                @if (expandSubNav && item.Id == clickedMenu)
                                                {
                                                    <li class="nav-item px-3">
                                                        <NavLink class="nav-link" href="@men.Link" @onclick="()=>GetIsClicked(men)">
                                                            <span class="@men.Icono" aria-hidden="true"></span> @men.Nombre
                                                        </NavLink>
                                                    </li>
                                                }
                                            }
                                        }
                                    </ul>
                                </li>
                            }
                        }
                       
                        <li class="nav-item" px-3>
                            <hr />
                            <NavLink href="/login" class="nav-link">
                                <span class="nav-icon fa fa-power-off" aria-hidden="true"></span> Cerrar Sesión
                            </NavLink>
                        </li>
                    </ul>
                @*}*@

            </div>
        </div>
    </aside>

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <app>
            <div class="card-body">
                @Body
            </div>
        </app>
    </div>
    <!-- Control Sidebar -->
    <aside class="control-sidebar control-sidebar-dark">
        <!-- Control sidebar content goes here -->
    </aside>
    <!-- /.control-sidebar -->
</div>



@code {

    Response response = new Response();
    private bool collapseNavMenu = true;
    List<Menu> list = new List<Menu>();
    private bool expandSubNav;
    private int clickedMenu = 0;
    private bool hasLink = true;
    private int prevClickedMenu = 0;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        if (hasLink)
        {
            collapseNavMenu = !collapseNavMenu;
        }
    }

    public void GetIsClicked(Menu model)
    {

        clickedMenu = model.Id;
        if (prevClickedMenu != clickedMenu)
        {
            expandSubNav = false;
            if (model.Link != "" || model.Nombre == "Index")
            {
                hasLink = true;
            }
            else
            {
                expandSubNav = !expandSubNav;
                hasLink = false;
            }
        }
        else
        {
            expandSubNav = !expandSubNav;
        }
        prevClickedMenu = clickedMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        response = await Http.GetFromJsonAsync<Response>($"api/menu/{singleton.EmpresaId}/-1");
        if (response.IsSuccessful)
        {
            list = JsonConvert.DeserializeObject<List<Menu>>(response.Data.ToString());
        }
    }
}


