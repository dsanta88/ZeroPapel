@page "/formlogeventos"
@page "/formlogeventos/{Id:int}"
@using ZeroPapel.Shared
@inject HttpClient Http
@using MatBlazor
@inject NavigationManager navigationManager
@using Newtonsoft.Json;
@inject ServicioSingleton singleton


<div class="row alert bg-info">
    <div class="row col-md-1">

    </div>
    <div class="col-md-5">
        <h5> <b>DETALLE LOG DE ERRORES</b></h5>
    </div>
</div>

@if (msgError != null)
{
    <div class="row alert bg-danger">
        <div class="row col-md-1">

        </div>
        <div class="col-md-5">
            <MatThemeProvider>
                <MatIcon Icon="cancel"> </MatIcon>   @msgError
            </MatThemeProvider>
        </div>
    </div>
}



<EditForm Model="@model">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-4">
            <MatTextField @bind-Value="@model.Fecha" Label="Fecha" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Mensaje" Label="Mensaje" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Fuente" Label="Fuente" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Seguimiento" Label="Seguimiento" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
</EditForm>
<hr />
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-2">
        <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="arrow_back" Text="Retornar" Size="ButtonSize.Medium" Click="@Retornar">
        </RadzenButton>
    </div>
</div>
@code {

    [Parameter]
    public int Id { get; set; }
    string msgError = null;
    public LogEvento model = new LogEvento();
    Response response = new Response();


    MatTheme theme1 = new MatTheme()
    {
        Primary = "green",
    };
    MatTheme theme3 = new MatTheme()
    {
        Primary = "red",
    };


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }



    protected async Task LoadData()
    {
        if (Id > 0)
        {
            response = await Http.GetFromJsonAsync<Response>($"api/logeventos/{Id}");
            if (response.IsSuccessful)
            {
                model = JsonConvert.DeserializeObject<List<LogEvento>>(response.Data.ToString()).FirstOrDefault();
            }
        }
    }

    public void Retornar()
    {
        navigationManager.NavigateTo($"/indexlogeventos");
    }


}

